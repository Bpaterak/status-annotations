"use strict";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function t(t,e,a,n){return new(a||(a=Promise))((function(i,o){function s(t){try{r(n.next(t))}catch(t){o(t)}}function l(t){try{r(n.throw(t))}catch(t){o(t)}}function r(t){var e;t.done?i(t.value):(e=t.value,e instanceof a?e:new a((function(t){t(e)}))).then(s,l)}r((n=n.apply(t,e||[])).next())}))}let e=210,a=figma.currentPage,n=0,i=0;function o(){let t=a.selection,e=[];return t&&t.forEach(t=>{"FRAME"===t.type&&t.parent===a&&e.push(t)}),e}function s(t){let e=t.id,n=a.findOne(t=>"GROUP"===t.type&&"status_annotations"===t.name);t.setSharedPluginData("statusannotations","status",""),n&&n.children.forEach(t=>{let a=t.getPluginData("frameId");e===a&&(t.remove(),i++)})}function l(){let t=a.findOne(t=>"GROUP"===t.type&&"status_annotations"===t.name);t&&(t.children.forEach(t=>{let e=t.getPluginData("frameId"),a=figma.getNodeById(e);if(a){let e=a.y-t.height-8,i=a.x+a.width-t.width;t.x!=i&&t.y!=e&&n++,t.x=i,t.y=e}else t.remove(),n++}),1===n?figma.notify("1 annotation updated"):n>1&&figma.notify(n+" annotations updated"),t.parent.insertChild(0,t)),n=0}function r(t){let e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?{r:parseInt(e[1],16)/255,g:parseInt(e[2],16)/255,b:parseInt(e[3],16)/255}:null}l(),"refresh"===figma.command?(l(),figma.closePlugin()):figma.showUI(__html__,{width:184,height:e}),figma.ui.onmessage=n=>{switch(n.type){case"height":e=n.height,figma.ui.resize(184,e);break;case"addStatus":!function(e){t(this,void 0,void 0,(function*(){let t=o();if(0!==t.length){let n=0,i=figma.createFrame();i.counterAxisSizingMode="AUTO",i.layoutMode="HORIZONTAL",i.itemSpacing=4,i.horizontalPadding=6,i.verticalPadding=4,i.name="annotation",i.topLeftRadius=3,i.topRightRadius=3,i.strokes=[{type:"SOLID",visible:!0,opacity:1,blendMode:"NORMAL",color:r("#DBDBDB")}],i.strokeWeight=1;let o=figma.createText();o.name=e.title;let l={family:"Inter",style:"Regular"};yield figma.loadFontAsync(l),o.fontName=l,o.fontSize=12,o.lineHeight={value:16,unit:"PIXELS"},o.characters=e.title;let f=figma.createNodeFromSvg(e.icon);f.name="icon-"+e.slug,f.layoutAlign="CENTER",i.insertChild(0,o),i.insertChild(1,f);let c=[];c.push(i);let d=figma.group(c,a);d.name=e.title;let u=r(e.color);u=Object.assign({a:1},u),d.effects=[{blendMode:"NORMAL",color:u,offset:{x:0,y:-2},radius:0,type:"INNER_SHADOW",visible:!0}],t.forEach(t=>{let i;s(t),i=0===n?d:d.clone();let o=t.id,l=t.y-i.height-8,r=t.x+t.width-i.width;i.x=r,i.y=l,i.setPluginData("frameId",o);let f=a.findOne(t=>"GROUP"===t.type&&"status_annotations"===t.name);if(f)f.appendChild(i),f.parent.insertChild(0,f);else{let t=[];t.push(i);let e=figma.group(t,a);e.name="status_annotations",e.locked=!0,e.expanded=!1,e.parent.insertChild(0,e)}t.setRelaunchData({status:e.title}),t.setSharedPluginData("statusannotations","status",e.title),a.setRelaunchData({refresh:""}),n++})}else figma.notify("Please select a top-level frame")}))}(n.status);break;case"delete":!function(){let t=o();0!==t.length?(t.forEach(t=>{s(t),t.setRelaunchData({})}),1===i?figma.notify("1 annotation removed"):i>1&&figma.notify(i+" annotations removed")):figma.notify("Please select a frame with a status");i=0}();break;case"deleteAll":!function(){let t=a.findOne(t=>"GROUP"===t.type&&"status_annotations"===t.name);t&&t.remove();a.findAll(t=>"FRAME"===t.type).forEach(t=>{t.setRelaunchData({})}),a.setRelaunchData({}),figma.notify("All annotations removed")}();break;case"refresh":l()}};
